{"ast":null,"code":"var _jsxFileName = \"/Users/abrahamtabo/Desktop/web-app/client/src/components/formvegetables.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from './Nav';\nimport Prompt from './Prompt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Formvegetables() {\n  _s();\n  const [isFormIncomplete, setIsFormIncomplete] = useState(true);\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [change, setChange] = useState([]);\n  const [etat, setEtat] = useState([]);\n  const [items, setItems] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const [message, setMessage] = useState('');\n  const [empty, setEmpty] = useState(false);\n  const [alternative, setAlternative] = useState([]);\n  const [category, setCategory] = useState([]);\n  useEffect(() => {\n    if (state === null) {\n      navigate('/sclient');\n    } else {\n      setMessage(state.cnotes);\n    }\n  }, [state]);\n  useEffect(() => {\n    axios.get('http://localhost:4000/category-limit', {\n      params: {\n        cname: 'Vegetables'\n      }\n    }).then(res => {\n      setCategory(res.data);\n    }).catch(error => {\n      navigate('/adminhome');\n    });\n  }, [category]);\n  useEffect(() => {\n    if (!isFormIncomplete) {\n      const data = {\n        formid: state.formid,\n        cnotes: message,\n        fnme: state.fnme,\n        lnme: state.lnme,\n        family: state.family\n      };\n      navigate('/formdried', {\n        state: data\n      });\n    }\n  }, [isFormIncomplete]);\n  useEffect(() => {\n    const unloadCallback = event => {\n      event.preventDefault();\n      event.returnValue = \"\";\n      return \"\";\n    };\n    window.addEventListener(\"beforeunload\", unloadCallback);\n    return () => window.removeEventListener(\"beforeunload\", unloadCallback);\n  }, []);\n  useEffect(() => {\n    axios.get('http://localhost:4000/items-category', {\n      params: {\n        category: 'Vegetable'\n      }\n    }).then(res => {\n      setItems(res.data);\n      if (res.data.length === 0) {\n        setEmpty(true);\n      } else {\n        setEmpty(false);\n      }\n    }).catch(error => {\n      alert('errror');\n    });\n  }, [items]);\n  const handleSubmit = async e => {\n    e.persist();\n    e.preventDefault();\n    axios.get('http://localhost:4000/total-category', {\n      params: {\n        formid: state.formid,\n        category: 'Vegetable'\n      }\n    }).then(res => {\n      if (state.family) {\n        if (res.data[0].sum > 20) {\n          alert('Reduce total quantity by updating form');\n        } else {\n          setIsFormIncomplete(false);\n        }\n      } else {\n        if (res.data[0].sum > 15) {\n          alert('Reduce total quantity by updating form');\n        } else {\n          setIsFormIncomplete(false);\n        }\n      }\n    }).catch(error => {\n      alert('Error please ask staff for help');\n    });\n  };\n  const handleItem = (e, itname, itmax, index) => {\n    e.persist();\n    e.preventDefault();\n    // check if we are updating to 0\n    if (parseInt(etat[index].quantity) === 0) {\n      const data1 = {\n        formid: state.formid,\n        itname: itname\n      };\n      axios.post('http://localhost:4000/update-deleteformitem-0', data1).then(res => {\n        const newChange = [...change];\n        newChange[index] = {\n          ...newChange[index],\n          ['chg']: false\n        };\n        setChange(newChange);\n      }).catch(error => {\n        alert('Error please ask staff for help');\n      });\n    } else {\n      //family check\n      if (state.family) {\n        if (etat[index].quantity > itmax * 2 || etat[index].quantity < 0) {\n          alert('Quantity invalid');\n          //check if we are adding an item and not updating it \n        } else {\n          if (change[index].chg === false && notes[index] !== undefined && alternative[index] !== undefined) {\n            const data = {\n              itname: itname,\n              formid: state.formid,\n              amount: etat[index].quantity,\n              selection: notes[index].choice,\n              alternative: alternative[index].alt\n            };\n            axios.post('http://localhost:4000/add-formitem', data).then(res => {\n              const newChange = [...change];\n              newChange[index] = {\n                ...newChange[index],\n                ['chg']: true\n              };\n              setChange(newChange);\n            }).catch(error => {\n              alert('Error please ask staff for help');\n            });\n          } else {\n            if (change[index].chg === false && notes[index] !== undefined && alternative[index] === undefined) {\n              const data = {\n                itname: itname,\n                formid: state.formid,\n                amount: etat[index].quantity,\n                selection: notes[index].choice,\n                alternative: ''\n              };\n              axios.post('http://localhost:4000/add-formitem', data).then(res => {\n                const newChange = [...change];\n                newChange[index] = {\n                  ...newChange[index],\n                  ['chg']: true\n                };\n                setChange(newChange);\n              }).catch(error => {\n                alert('Error please ask staff for help');\n              });\n            } else {\n              if (change[index].chg === false && notes[index] === undefined && alternative[index] !== undefined) {\n                const data = {\n                  itname: itname,\n                  formid: state.formid,\n                  amount: etat[index].quantity,\n                  selection: '',\n                  alternative: alternative[index].alt\n                };\n                axios.post('http://localhost:4000/add-formitem', data).then(res => {\n                  const newChange = [...change];\n                  newChange[index] = {\n                    ...newChange[index],\n                    ['chg']: true\n                  };\n                  setChange(newChange);\n                }).catch(error => {\n                  alert('Error please ask staff for help');\n                });\n              } else {\n                if (change[index].chg === false && notes[index] === undefined && alternative[index] === undefined) {\n                  const data = {\n                    itname: itname,\n                    formid: state.formid,\n                    amount: etat[index].quantity,\n                    selection: '',\n                    alternative: ''\n                  };\n                  axios.post('http://localhost:4000/add-formitem', data).then(res => {\n                    const newChange = [...change];\n                    newChange[index] = {\n                      ...newChange[index],\n                      ['chg']: true\n                    };\n                    setChange(newChange);\n                  }).catch(error => {\n                    alert('Error please ask staff for help');\n                  });\n                  //in cases below we are updating items and not adding new ones\n                } else {\n                  if (change[index].chg === true && notes[index] === undefined && alternative[index] !== undefined) {\n                    const data = {\n                      itname: itname,\n                      formid: state.formid,\n                      amount: etat[index].quantity,\n                      alternative: alternative[index].alt\n                    };\n                    axios.post('http://localhost:4000/update-items', data).then(res => {}).catch(error => {\n                      alert('Error please ask staff for help');\n                    });\n                    axios.post('http://localhost:4000/update-formitem-alt', data).then(res => {}).catch(error => {\n                      alert('Error please ask staff for help');\n                    });\n                  } else {\n                    if (change[index].chg === true && notes[index] === undefined && alternative[index] === undefined) {\n                      const data = {\n                        itname: itname,\n                        formid: state.formid,\n                        amount: etat[index].quantity\n                      };\n                      axios.post('http://localhost:4000/update-items', data).then(res => {}).catch(error => {\n                        alert('Error please ask staff for help');\n                      });\n                    } else {\n                      if (change[index].chg === true && notes[index] !== undefined && alternative[index] !== undefined) {\n                        const data = {\n                          itname: itname,\n                          formid: state.formid,\n                          amount: etat[index].quantity,\n                          selection: notes[index].choice,\n                          alternative: alternative[index].alt\n                        };\n                        axios.post('http://localhost:4000/update-items', data).then(res => {}).catch(error => {\n                          alert('Error please ask staff for help');\n                        });\n                        axios.post('http://localhost:4000/update-item-note', data).then(res => {}).catch(error => {\n                          alert('Error please ask staff for help');\n                        });\n                        axios.post('http://localhost:4000/update-formitem-alt', data).then(res => {}).catch(error => {\n                          alert('Error please ask staff for help');\n                        });\n                      } else {\n                        const data = {\n                          itname: itname,\n                          formid: state.formid,\n                          amount: etat[index].quantity,\n                          selection: notes[index].choice\n                        };\n                        axios.post('http://localhost:4000/update-items', data).then(res => {}).catch(error => {\n                          alert('Error please ask staff for help');\n                        });\n                        axios.post('http://localhost:4000/update-item-note', data).then(res => {}).catch(error => {\n                          alert('Error please ask staff for help');\n                        });\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        //this is what happens if not family\n      } else {\n        if (etat[index].quantity > itmax || etat[index].quantity < 0) {\n          alert('Quantity invalid');\n        } else {\n          if (change[index].chg === false && notes[index] !== undefined && alternative[index] !== undefined) {\n            const data = {\n              itname: itname,\n              formid: state.formid,\n              amount: etat[index].quantity,\n              selection: notes[index].choice,\n              alternative: alternative[index].alt\n            };\n            axios.post('http://localhost:4000/add-formitem', data).then(res => {\n              const newChange = [...change];\n              newChange[index] = {\n                ...newChange[index],\n                ['chg']: true\n              };\n              setChange(newChange);\n            }).catch(error => {\n              alert('Error please ask staff for help');\n            });\n          } else {\n            if (change[index].chg === false && notes[index] !== undefined && alternative[index] === undefined) {\n              const data = {\n                itname: itname,\n                formid: state.formid,\n                amount: etat[index].quantity,\n                selection: notes[index].choice,\n                alternative: ''\n              };\n              axios.post('http://localhost:4000/add-formitem', data).then(res => {\n                const newChange = [...change];\n                newChange[index] = {\n                  ...newChange[index],\n                  ['chg']: true\n                };\n                setChange(newChange);\n              }).catch(error => {\n                alert('Error please ask staff for help');\n              });\n            } else {\n              if (change[index].chg === false && notes[index] === undefined && alternative[index] !== undefined) {\n                const data = {\n                  itname: itname,\n                  formid: state.formid,\n                  amount: etat[index].quantity,\n                  selection: '',\n                  alternative: alternative[index].alt\n                };\n                axios.post('http://localhost:4000/add-formitem', data).then(res => {\n                  const newChange = [...change];\n                  newChange[index] = {\n                    ...newChange[index],\n                    ['chg']: true\n                  };\n                  setChange(newChange);\n                }).catch(error => {\n                  alert('Error please ask staff for help');\n                });\n              } else {\n                if (change[index].chg === false && notes[index] === undefined && alternative[index] === undefined) {\n                  const data = {\n                    itname: itname,\n                    formid: state.formid,\n                    amount: etat[index].quantity,\n                    selection: '',\n                    alternative: ''\n                  };\n                  axios.post('http://localhost:4000/add-formitem', data).then(res => {\n                    const newChange = [...change];\n                    newChange[index] = {\n                      ...newChange[index],\n                      ['chg']: true\n                    };\n                    setChange(newChange);\n                  }).catch(error => {\n                    alert('Error please ask staff for help');\n                  });\n                  //in cases below we are updating items and not adding new ones\n                } else {\n                  if (change[index].chg === true && notes[index] === undefined && alternative[index] !== undefined) {\n                    const data = {\n                      itname: itname,\n                      formid: state.formid,\n                      amount: etat[index].quantity,\n                      alternative: alternative[index].alt\n                    };\n                    axios.post('http://localhost:4000/update-items', data).then(res => {}).catch(error => {\n                      alert('Error please ask staff for help');\n                    });\n                    axios.post('http://localhost:4000/update-formitem-alt', data).then(res => {}).catch(error => {\n                      alert('Error please ask staff for help');\n                    });\n                  } else {\n                    if (change[index].chg === true && notes[index] === undefined && alternative[index] === undefined) {\n                      const data = {\n                        itname: itname,\n                        formid: state.formid,\n                        amount: etat[index].quantity\n                      };\n                      axios.post('http://localhost:4000/update-items', data).then(res => {}).catch(error => {\n                        alert('Error please ask staff for help');\n                      });\n                    } else {\n                      if (change[index].chg === true && notes[index] !== undefined && alternative[index] !== undefined) {\n                        const data = {\n                          itname: itname,\n                          formid: state.formid,\n                          amount: etat[index].quantity,\n                          selection: notes[index].choice,\n                          alternative: alternative[index].alt\n                        };\n                        axios.post('http://localhost:4000/update-items', data).then(res => {}).catch(error => {\n                          alert('Error please ask staff for help');\n                        });\n                        axios.post('http://localhost:4000/update-item-note', data).then(res => {}).catch(error => {\n                          alert('Error please ask staff for help');\n                        });\n                        axios.post('http://localhost:4000/update-formitem-alt', data).then(res => {}).catch(error => {\n                          alert('Error please ask staff for help');\n                        });\n                      } else {\n                        const data = {\n                          itname: itname,\n                          formid: state.formid,\n                          amount: etat[index].quantity,\n                          selection: notes[index].choice\n                        };\n                        axios.post('http://localhost:4000/update-items', data).then(res => {}).catch(error => {\n                          alert('Error please ask staff for help');\n                        });\n                        axios.post('http://localhost:4000/update-item-note', data).then(res => {}).catch(error => {\n                          alert('Error please ask staff for help');\n                        });\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  const handleChange = (e, i) => {\n    if (etat[i] === undefined) {\n      const newChange = [...change];\n      newChange[i] = {\n        ...newChange[i],\n        ['chg']: false\n      };\n      setChange(newChange);\n    }\n    e.persist();\n    const newEtat = [...etat];\n    newEtat[i] = {\n      ...newEtat[i],\n      [e.target.name]: e.target.value\n    };\n    setEtat(newEtat);\n  };\n  const handleMessageChange = event => {\n    setMessage(state.cnotes + ', ' + event.target.value);\n  };\n  const handleNotes = (e, i) => {\n    e.persist();\n    const newNote = [...notes];\n    newNote[i] = {\n      ...newNote[i],\n      [e.target.name]: e.target.value\n    };\n    setNotes(newNote);\n  };\n  const handleAlt = (e, i) => {\n    e.persist();\n    const newAlt = [...alternative];\n    newAlt[i] = {\n      ...newAlt[i],\n      [e.target.name]: e.target.value\n    };\n    setAlternative(newAlt);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      class: \"bg-light text-dark p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"text-warning\",\n        children: \"List of availbale Vegetables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"text-danger\",\n          children: empty ? 'We are out of vegetables' : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Max \", category[0].maximum, \" Fruits (\", category[0].maximum_f, \" for families)\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"h-100 card-group \",\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingBottom: '20pt',\n            paddingRight: '20pt',\n            paddingTop: '20pt'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card\",\n            style: {\n              width: '18rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                class: \"needs-validation\",\n                onSubmit: e => handleItem(e, item.itname, item.max, index),\n                novalidate: true,\n                children: [item.availability === 'Low Stock' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"row g-2 \",\n                  style: {\n                    paddingBottom: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"col\",\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      class: \"card-title\",\n                      children: item.itname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 42\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"col text-end\",\n                    children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                      style: {\n                        display: 'inline',\n                        borderRadius: '10px'\n                      },\n                      class: \" bg-warning p-1\",\n                      children: item.availability\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 51\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 59\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    class: \"card-title\",\n                    children: item.itname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 620,\n                    columnNumber: 47\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 30\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  class: \"form-control\",\n                  type: \"number\",\n                  placeholder: \"Quantity\",\n                  name: \"quantity\",\n                  onChange: e => handleChange(e, index),\n                  \"aria-label\": \"default input example\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"card-text text-danger\",\n                  children: [\"Limit: \", state.family ? item.max * 2 : item.max]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 25\n                }, this), item.description !== '' ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  class: \"form-control\",\n                  type: \"text\",\n                  placeholder: \"Selection choice\",\n                  name: \"choice\",\n                  onChange: e => handleNotes(e, index),\n                  \"aria-label\": \"default input example\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 53\n                }, this) : '', item.description !== '' ? /*#__PURE__*/_jsxDEV(\"h6\", {\n                  class: \"card-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"text-danger\",\n                    children: \"Selection:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 75\n                  }, this), \" \", item.description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 53\n                }, this) : '', item.availability === 'Low Stock' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"form-control\",\n                    type: \"text\",\n                    placeholder: \"(Optional) Alternative\",\n                    name: \"alt\",\n                    onChange: e => handleAlt(e, index),\n                    \"aria-label\": \"default input example\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 68\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    class: \"card-text text-danger\",\n                    children: \"Low in stock. Type alternative item\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 63\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginTop: '5pt'\n                  },\n                  type: \"submit\",\n                  class: \"btn btn-secondary\",\n                  children: change[index] === undefined || change[index].chg === false ? 'Add to form' : 'Update form'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control \",\n        rows: \"3\",\n        id: \"notes\",\n        onChange: handleMessageChange,\n        style: {\n          height: '5rem'\n        },\n        type: \"text\",\n        placeholder: \"Addtional comments\",\n        name: \"cnotes\",\n        \"aria-label\": \"default input example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          paddingTop: '20px'\n        },\n        children: [\"Please \", /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"text-danger\",\n          children: \"click add to form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 54\n        }, this), \" on all chosen items before clicking next\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: handleSubmit,\n        style: {\n          width: '30%'\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Prompt, {\n      when: isFormIncomplete,\n      message: \"Please do not leave form until submitted. Click on CANCEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 601,\n    columnNumber: 9\n  }, this);\n}\n_s(Formvegetables, \"3E7wFBPlJNvVSkNsHmV0HFVbHww=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Formvegetables;\nexport default Formvegetables;\nvar _c;\n$RefreshReg$(_c, \"Formvegetables\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","useNavigate","Nav","Prompt","jsxDEV","_jsxDEV","Fragment","_Fragment","Formvegetables","_s","isFormIncomplete","setIsFormIncomplete","state","navigate","change","setChange","etat","setEtat","items","setItems","notes","setNotes","message","setMessage","empty","setEmpty","alternative","setAlternative","category","setCategory","cnotes","get","params","cname","then","res","data","catch","error","formid","fnme","lnme","family","unloadCallback","event","preventDefault","returnValue","window","addEventListener","removeEventListener","length","alert","handleSubmit","e","persist","sum","handleItem","itname","itmax","index","parseInt","quantity","data1","post","newChange","chg","undefined","amount","selection","choice","alt","handleChange","i","newEtat","target","name","value","handleMessageChange","handleNotes","newNote","handleAlt","newAlt","children","fileName","_jsxFileName","lineNumber","columnNumber","class","maximum","maximum_f","map","item","style","paddingBottom","paddingRight","paddingTop","width","onSubmit","max","novalidate","availability","display","borderRadius","type","placeholder","onChange","required","description","marginTop","rows","id","height","className","onClick","when","_c","$RefreshReg$"],"sources":["/Users/abrahamtabo/Desktop/web-app/client/src/components/formvegetables.js"],"sourcesContent":["\nimport React, {useEffect, useState} from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from './Nav'; \nimport Prompt from './Prompt';\n\n\nfunction Formvegetables(){\n    const [isFormIncomplete, setIsFormIncomplete] = useState(true);\n    const {state} = useLocation();\n    const navigate = useNavigate();\n    const [change, setChange] = useState([]);\n    const [etat, setEtat] = useState([]);\n    const [items, setItems] = useState([]);\n    const [notes, setNotes] = useState([]);\n    const [message, setMessage] = useState('');\n    const[empty, setEmpty]=useState(false)\n    const [alternative, setAlternative]= useState([])\n    const [category, setCategory] = useState([]);\n    \n    useEffect(() => {\n        if (state === null){\n            navigate('/sclient')\n        }else{\n            setMessage(state.cnotes)\n        }\n      }, [state]);\n\n      useEffect( () => {\n        axios.get('http://localhost:4000/category-limit',{\n            params: {\n              cname: 'Vegetables'\n            } \n        }).then(res => {\n            setCategory(res.data)\n\n            })\n        .catch((error) => {\n    \n                    navigate('/adminhome')\n                })\n        \n        }, [category]);\n\n    useEffect(() => {\n        if (!isFormIncomplete) {\n            const data= {\n                formid: state.formid,\n                cnotes: message,\n                fnme: state.fnme,\n                lnme: state.lnme,\n                family: state.family,\n            }\n        navigate('/formdried', {state: data})\n        }\n      }, [isFormIncomplete]);\n\n    useEffect(() => {\n        const unloadCallback = (event) => {\n          event.preventDefault();\n          event.returnValue = \"\";\n          return \"\";\n        };\n      \n        window.addEventListener(\"beforeunload\", unloadCallback);\n        return () => window.removeEventListener(\"beforeunload\", unloadCallback);\n      }, []);\n\n    useEffect( () => {\n        axios.get('http://localhost:4000/items-category',{\n            params: {\n              category: 'Vegetable'\n            } \n        })\n            .then(res => {\n                setItems(res.data);\n                if(res.data.length === 0){\n                    setEmpty(true)\n                }else{\n                    setEmpty(false)\n                }\n            })\n            .catch((error) => {\n                alert('errror');\n            });\n          }, [items]);\n\n    const handleSubmit = async (e) => {\n        e.persist();\n        e.preventDefault();\n\n        axios.get('http://localhost:4000/total-category', {\n            params: {\n              formid: state.formid,\n              category: 'Vegetable'\n            } \n        }) \n        .then(  res => {\n            if(state.family){\n                if(res.data[0].sum > 20){\n                    alert('Reduce total quantity by updating form')\n                }else{\n                    setIsFormIncomplete(false);\n                }\n                \n            }else{\n                if(res.data[0].sum > 15){\n                    alert('Reduce total quantity by updating form')\n                }else{\n                    setIsFormIncomplete(false)\n                }\n            }   \n        })\n        .catch((error) => {\n            alert('Error please ask staff for help');\n        });\n\n\n    }\n    const handleItem =(e, itname, itmax , index) => {\n        e.persist();\n        e.preventDefault();\n        // check if we are updating to 0\n        if(parseInt(etat[index].quantity) === 0){\n            const data1 ={\n                formid: state.formid,\n                itname: itname\n            }\n\n            axios.post('http://localhost:4000/update-deleteformitem-0', data1 )\n                        .then( res => {\n        \n                            const newChange = [...change];\n                            newChange[index] = {\n                           ...newChange[index],\n                             ['chg']: false\n                              };\n                              setChange(newChange);\n                        \n                        })\n                        .catch((error) => {\n                            alert('Error please ask staff for help');\n                        });\n        }else{\n            //family check\n            if(state.family){\n                if (etat[index].quantity > (itmax * 2) || etat[index].quantity < 0){\n                    alert('Quantity invalid')\n                    //check if we are adding an item and not updating it \n               } else{\n                    if(change[index].chg === false && notes[index] !== undefined && alternative[index] !== undefined){\n                        const data= {\n                            itname:  itname,\n                            formid: state.formid,\n                            amount: etat[index].quantity,\n                            selection: notes[index].choice,\n                            alternative: alternative[index].alt\n                        }\n                \n                        axios.post('http://localhost:4000/add-formitem', data )\n                        .then( res => {\n        \n                            const newChange = [...change];\n                            newChange[index] = {\n                           ...newChange[index],\n                             ['chg']: true\n                              };\n                              setChange(newChange);\n                        \n                        })\n                        .catch((error) => {\n                            alert('Error please ask staff for help');\n                        });\n                    }else{\n                        if(change[index].chg === false && notes[index] !== undefined && alternative[index] === undefined){\n                            const data= {\n                                itname:  itname,\n                                formid: state.formid,\n                                amount: etat[index].quantity,\n                                selection: notes[index].choice,\n                                alternative: ''\n                            }\n                    \n                            axios.post('http://localhost:4000/add-formitem', data )\n                            .then( res => {\n            \n                                const newChange = [...change];\n                                newChange[index] = {\n                               ...newChange[index],\n                                 ['chg']: true\n                                  };\n                                  setChange(newChange);\n                            \n                            })\n                            .catch((error) => {\n                                alert('Error please ask staff for help');\n                            });\n                        }else{\n                            if(change[index].chg === false && notes[index] === undefined && alternative[index] !== undefined){\n                            const data= {\n                                itname:  itname,\n                                formid: state.formid,\n                                amount: etat[index].quantity,\n                                selection: '',\n                                alternative: alternative[index].alt\n                            }\n                    \n                            axios.post('http://localhost:4000/add-formitem', data )\n                            .then( res => {\n            \n                                const newChange = [...change];\n                                newChange[index] = {\n                               ...newChange[index],\n                                 ['chg']: true\n                                  };\n                                  setChange(newChange);\n                            \n                            })\n                            .catch((error) => {\n                                alert('Error please ask staff for help');\n                            });\n                            }else{\n                                if(change[index].chg === false && notes[index] === undefined && alternative[index] === undefined){\n                                    const data= {\n                                        itname:  itname,\n                                        formid: state.formid,\n                                        amount: etat[index].quantity,\n                                        selection: '',\n                                        alternative: ''\n                                    }\n                            \n                                    axios.post('http://localhost:4000/add-formitem', data )\n                                    .then( res => {\n                    \n                                        const newChange = [...change];\n                                        newChange[index] = {\n                                       ...newChange[index],\n                                         ['chg']: true\n                                          };\n                                          setChange(newChange);\n                                    \n                                    })\n                                    .catch((error) => {\n                                        alert('Error please ask staff for help');\n                                    });\n                                    //in cases below we are updating items and not adding new ones\n                                }else{\n                                    if(change[index].chg === true && notes[index] === undefined && alternative[index] !== undefined){\n                                        const data= {\n                                            itname:  itname,\n                                            formid: state.formid,\n                                            amount: etat[index].quantity,\n                                            alternative: alternative[index].alt\n                                        }\n                                        \n                                        axios.post('http://localhost:4000/update-items', data )\n                                        .then( res => {\n                                     \n                                        })\n                                        .catch((error) => {\n                                            alert('Error please ask staff for help');\n                                        });\n\n                                        axios.post('http://localhost:4000/update-formitem-alt', data )\n                                        .then( res => {\n                                     \n                                        })\n                                        .catch((error) => {\n                                            alert('Error please ask staff for help');\n                                        });\n                                    \n                                    }else{\n                                        if(change[index].chg === true && notes[index] === undefined && alternative[index] === undefined){\n                                            const data= {\n                                                itname:  itname,\n                                                formid: state.formid,\n                                                amount: etat[index].quantity,\n                                            }\n                                            \n                                            axios.post('http://localhost:4000/update-items', data )\n                                            .then( res => {\n                                         \n                                            })\n                                            .catch((error) => {\n                                                alert('Error please ask staff for help');\n                                            });\n                                        }else{\n                                            if(change[index].chg === true && notes[index] !== undefined && alternative[index] !== undefined){\n                                                const data= {\n                                                    itname:  itname,\n                                                    formid: state.formid,\n                                                    amount: etat[index].quantity,\n                                                    selection: notes[index].choice,\n                                                    alternative: alternative[index].alt\n                                                }\n                                        \n                                                axios.post('http://localhost:4000/update-items', data )\n                                                .then( res => {\n                                            \n                                                })\n                                                .catch((error) => {\n                                                    alert('Error please ask staff for help');\n                                                });\n                                                axios.post('http://localhost:4000/update-item-note', data )\n                                                .then( res => {\n                                            \n                                                })\n                                                .catch((error) => {\n                                                    alert('Error please ask staff for help');\n                                                });\n                                                axios.post('http://localhost:4000/update-formitem-alt', data )\n                                                .then( res => {\n                                            \n                                                })\n                                                .catch((error) => {\n                                                    alert('Error please ask staff for help');\n                                                });\n                                            }else{\n                                                const data= {\n                                                    itname:  itname,\n                                                    formid: state.formid,\n                                                    amount: etat[index].quantity,\n                                                    selection: notes[index].choice,\n                                                }\n                                                axios.post('http://localhost:4000/update-items', data )\n                                                .then( res => {\n                                            \n                                                })\n                                                .catch((error) => {\n                                                    alert('Error please ask staff for help');\n                                                });\n                                                axios.post('http://localhost:4000/update-item-note', data )\n                                                .then( res => {\n                                            \n                                                })\n                                                .catch((error) => {\n                                                    alert('Error please ask staff for help');\n                                                });\n                                            }\n                                            \n                                        }\n                                    }\n                                }\n                            }\n                       }\n                    }\n                }           \n            //this is what happens if not family\n            }else{\n                if (etat[index].quantity > itmax || etat[index].quantity < 0){\n                    alert('Quantity invalid')\n               } else{\n                if(change[index].chg === false && notes[index] !== undefined && alternative[index] !== undefined){\n                    const data= {\n                        itname:  itname,\n                        formid: state.formid,\n                        amount: etat[index].quantity,\n                        selection: notes[index].choice,\n                        alternative: alternative[index].alt\n                    }\n            \n                    axios.post('http://localhost:4000/add-formitem', data )\n                    .then( res => {\n    \n                        const newChange = [...change];\n                        newChange[index] = {\n                       ...newChange[index],\n                         ['chg']: true\n                          };\n                          setChange(newChange);\n                    \n                    })\n                    .catch((error) => {\n                        alert('Error please ask staff for help');\n                    });\n                }else{\n                    if(change[index].chg === false && notes[index] !== undefined && alternative[index] === undefined){\n                        const data= {\n                            itname:  itname,\n                            formid: state.formid,\n                            amount: etat[index].quantity,\n                            selection: notes[index].choice,\n                            alternative: ''\n                        }\n                \n                        axios.post('http://localhost:4000/add-formitem', data )\n                        .then( res => {\n        \n                            const newChange = [...change];\n                            newChange[index] = {\n                           ...newChange[index],\n                             ['chg']: true\n                              };\n                              setChange(newChange);\n                        \n                        })\n                        .catch((error) => {\n                            alert('Error please ask staff for help');\n                        });\n                    }else{\n                        if(change[index].chg === false && notes[index] === undefined && alternative[index] !== undefined){\n                        const data= {\n                            itname:  itname,\n                            formid: state.formid,\n                            amount: etat[index].quantity,\n                            selection: '',\n                            alternative: alternative[index].alt\n                        }\n                \n                        axios.post('http://localhost:4000/add-formitem', data )\n                        .then( res => {\n        \n                            const newChange = [...change];\n                            newChange[index] = {\n                           ...newChange[index],\n                             ['chg']: true\n                              };\n                              setChange(newChange);\n                        \n                        })\n                        .catch((error) => {\n                            alert('Error please ask staff for help');\n                        });\n                        }else{\n                            if(change[index].chg === false && notes[index] === undefined && alternative[index] === undefined){\n                                const data= {\n                                    itname:  itname,\n                                    formid: state.formid,\n                                    amount: etat[index].quantity,\n                                    selection: '',\n                                    alternative: ''\n                                }\n                        \n                                axios.post('http://localhost:4000/add-formitem', data )\n                                .then( res => {\n                \n                                    const newChange = [...change];\n                                    newChange[index] = {\n                                   ...newChange[index],\n                                     ['chg']: true\n                                      };\n                                      setChange(newChange);\n                                \n                                })\n                                .catch((error) => {\n                                    alert('Error please ask staff for help');\n                                });\n                                //in cases below we are updating items and not adding new ones\n                            }else{\n                                if(change[index].chg === true && notes[index] === undefined && alternative[index] !== undefined){\n                                    const data= {\n                                        itname:  itname,\n                                        formid: state.formid,\n                                        amount: etat[index].quantity,\n                                        alternative: alternative[index].alt\n                                    }\n                                    \n                                    axios.post('http://localhost:4000/update-items', data )\n                                    .then( res => {\n                                 \n                                    })\n                                    .catch((error) => {\n                                        alert('Error please ask staff for help');\n                                    });\n\n                                    axios.post('http://localhost:4000/update-formitem-alt', data )\n                                    .then( res => {\n                                 \n                                    })\n                                    .catch((error) => {\n                                        alert('Error please ask staff for help');\n                                    });\n                                \n                                }else{\n                                    if(change[index].chg === true && notes[index] === undefined && alternative[index] === undefined){\n                                        const data= {\n                                            itname:  itname,\n                                            formid: state.formid,\n                                            amount: etat[index].quantity,\n                                        }\n                                        \n                                        axios.post('http://localhost:4000/update-items', data )\n                                        .then( res => {\n                                     \n                                        })\n                                        .catch((error) => {\n                                            alert('Error please ask staff for help');\n                                        });\n                                    }else{\n                                        if(change[index].chg === true && notes[index] !== undefined && alternative[index] !== undefined){\n                                            const data= {\n                                                itname:  itname,\n                                                formid: state.formid,\n                                                amount: etat[index].quantity,\n                                                selection: notes[index].choice,\n                                                alternative: alternative[index].alt\n                                            }\n                                    \n                                            axios.post('http://localhost:4000/update-items', data )\n                                            .then( res => {\n                                        \n                                            })\n                                            .catch((error) => {\n                                                alert('Error please ask staff for help');\n                                            });\n                                            axios.post('http://localhost:4000/update-item-note', data )\n                                            .then( res => {\n                                        \n                                            })\n                                            .catch((error) => {\n                                                alert('Error please ask staff for help');\n                                            });\n                                            axios.post('http://localhost:4000/update-formitem-alt', data )\n                                            .then( res => {\n                                        \n                                            })\n                                            .catch((error) => {\n                                                alert('Error please ask staff for help');\n                                            });\n                                        }else{\n                                            const data= {\n                                                itname:  itname,\n                                                formid: state.formid,\n                                                amount: etat[index].quantity,\n                                                selection: notes[index].choice,\n                                            }\n                                            axios.post('http://localhost:4000/update-items', data )\n                                            .then( res => {\n                                        \n                                            })\n                                            .catch((error) => {\n                                                alert('Error please ask staff for help');\n                                            });\n                                            axios.post('http://localhost:4000/update-item-note', data )\n                                            .then( res => {\n                                        \n                                            })\n                                            .catch((error) => {\n                                                alert('Error please ask staff for help');\n                                            });\n                                        }\n                                        \n                                    }\n                                }\n                            }\n                        }\n                   }\n                }\n               }\n            }\n        }\n    }\n    const handleChange = (e, i) => {\n\n        if(etat[i] === undefined){\n            const newChange = [...change];\n            newChange[i] = {\n           ...newChange[i],\n             ['chg']: false\n              };\n              setChange(newChange);\n\n        }\n        e.persist();\n      const newEtat = [...etat];\n      newEtat[i] = {\n        ...newEtat[i],\n        [e.target.name]: e.target.value\n      };\n      setEtat(newEtat);\n    }\n  \n \n\n    const handleMessageChange = event => {\n\n        setMessage(state.cnotes + ', '+ event.target.value);\n    }\n    const handleNotes = (e, i) => {\n        e.persist();\n      const newNote = [...notes];\n      newNote[i] = {\n        ...newNote[i],\n        [e.target.name]: e.target.value\n      };\n      setNotes(newNote);\n      \n    }\n    const handleAlt = (e, i) => {\n        e.persist();\n      const newAlt = [...alternative];\n      newAlt[i] = {\n        ...newAlt[i],\n        [e.target.name]: e.target.value\n      };\n      setAlternative(newAlt);\n    }\n    return(\n        <section>\n            <Nav />\n            <body class=\"bg-light text-dark p-5\">\n            <h1 class=\"text-warning\">List of availbale Vegetables</h1>\n            <section><h2 class=\"text-danger\">{empty? 'We are out of vegetables' : <>Max {category[0].maximum} Fruits ({category[0].maximum_f} for families)</>}</h2></section>\n            \n            <div class=\"h-100 card-group \">\n                \n            {\n            items.map((item, index) => (\n                \n                <div style={{paddingBottom: '20pt', paddingRight: '20pt', paddingTop: '20pt'}}>\n\n                <div class=\"card\" style={{width: '18rem'}}>\n                    <div class=\"card-body\">\n                    <form class=\"needs-validation\"  onSubmit={(e) => handleItem(e,item.itname, item.max, index)} novalidate>\n                    {(item.availability === 'Low Stock')? <div class=\"row g-2 \" style={{paddingBottom: '5px'}}>\n                        <div class=\"col\"><h5 class=\"card-title\">{item.itname}</h5></div>\n                        <div class=\"col text-end\"><h6 style={{display: 'inline', borderRadius: '10px'}} class=\" bg-warning p-1\">{item.availability}</h6></div>\n                    </div> : <div class=\"col\"><h5 class=\"card-title\">{item.itname}</h5></div>}\n                        <input class=\"form-control\" type=\"number\" placeholder=\"Quantity\"  name=\"quantity\" onChange={(e) => handleChange(e, index )} aria-label=\"default input example\" required />\n                        <p class=\"card-text text-danger\">Limit: {state.family ? (  item.max * 2) : (item.max)}</p>\n                        {(item.description !== '')? <input class=\"form-control\" type=\"text\" placeholder=\"Selection choice\"  name=\"choice\" onChange={(e) => handleNotes(e, index )} aria-label=\"default input example\" required/> : ''}\n                        {(item.description !== '')? <h6 class=\"card-text\"><span class=\"text-danger\">Selection:</span> {item.description}</h6> : ''}\n                        {(item.availability === 'Low Stock')? <div><input class=\"form-control\" type=\"text\" placeholder=\"(Optional) Alternative\"  name=\"alt\" onChange={(e) => handleAlt(e, index )} aria-label=\"default input example\"/>\n                        <p class=\"card-text text-danger\">Low in stock. Type alternative item</p></div> : null}\n                        <button style={{marginTop: '5pt'}} type=\"submit\" class=\"btn btn-secondary\" >{((change[index] === undefined) ||(change[index].chg === false) ) ? 'Add to form' : 'Update form'}</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            ))\n            }\n\n            </div>\n\n            <textarea class=\"form-control \"  rows=\"3\"        id=\"notes\"  onChange={handleMessageChange} style={{height: '5rem'}} type=\"text\" placeholder=\"Addtional comments\"  name=\"cnotes\" aria-label=\"default input example\"/>\n            <h4 style={{paddingTop: '20px'}} >Please <span class=\"text-danger\">click add to form</span> on all chosen items before clicking next</h4>\n            <button type=\"button\" className=\"btn btn-danger\" onClick={handleSubmit} style={{width: '30%'}}>Next</button>\n\n            </body>\n            <Prompt\n       when={isFormIncomplete}\n       message=\"Please do not leave form until submitted. Click on CANCEL\" />\n        </section>\n    );\n}\n\nexport default Formvegetables;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}